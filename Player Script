using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Player : MonoBehaviour {

    public float Speed = 10f;

    public float jumpSpeed = 8f;
    public bool grounded;
    public Transform groundCheck;
    public float groundRadius = 0.2f;
    public LayerMask whatIsGround;
    float Doublejump = 0.0f;
    float jumpcooldown = 2f;
    float timeSinceJump = 0.0f;


    private Rigidbody2D rb2d;

    bool facingRight = true;

    Animator anim;

   

    void Start()
    {
        rb2d = GetComponent<Rigidbody2D>();

        anim = GetComponent<Animator>();
    }

    void FixedUpdate()
    {
        timeSinceJump += Time.deltaTime;

        float mag = GetComponent<Rigidbody2D>().velocity.magnitude;

        if (mag > Speed)
        {
            rb2d.velocity *= Speed / mag;
        }




        grounded = Physics2D.OverlapCircle(groundCheck.position, groundRadius, whatIsGround);
        anim.SetBool("Ground", grounded);

        if (Input.GetButtonDown("Jump") && grounded)
            rb2d.velocity = new Vector2(rb2d.velocity.y, jumpSpeed);
            
        float moveHorizontal = Input.GetAxis("Horizontal");
        float moveVertical = Input.GetAxis("Vertical");

        Vector2 movement = new Vector2(moveHorizontal, 0.0f).normalized;
        rb2d.velocity = movement * Speed;



        if ((grounded == false) && (Doublejump <= 2f))
        {
            jumpcooldown = -1000f;
        }

        if ((Input.GetButtonDown("Jump")) && (grounded == true) && (timeSinceJump > jumpcooldown))

        {
            Vector2 jumpmovement = new Vector2(moveHorizontal, moveVertical).normalized;
            timeSinceJump = 0;
            Doublejump += 1f;
            rb2d.AddForce(new Vector2(0f, jumpSpeed));

        }


        if (grounded == true)
            {
            Doublejump = 0f;
            }

        anim.SetFloat("Speed", Mathf.Abs(moveHorizontal));

        if (moveHorizontal > 0 && !facingRight)
            Flip();
        else if (moveHorizontal < 0 && facingRight)
            Flip();

        print(mag);
        print(grounded);
        print(("Doublejump:") + (Doublejump));


        if (rb2d.velocity.y == 0)
        {
            anim.SetBool("isJumping", false);
            anim.SetBool("isFalling", false);
        }

        if (rb2d.velocity.y > 0)
        {
            anim.SetBool("isJumping", true);
        }

        if (rb2d.velocity.y < 0)
        {
            anim.SetBool("isJumping", false);
            anim.SetBool("isFalling", true);
        }
    }

    void Flip ()
    {
        facingRight = !facingRight;
        Vector3 theScale = transform.localScale;
        theScale.x *= -1;
        transform.localScale = theScale;
    }

}



